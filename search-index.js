var searchIndex = {};
searchIndex["cdr"] = {"doc":"A serialization/deserialization implementation for Common Data Representation.","items":[[4,"BigEndian","cdr","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[3,"Deserializer","","A deserializer that reads bytes from a buffer.",null,null],[3,"Error","","The Error type.",null,null],[3,"Serializer","","A serializer that writes values into a buffer.",null,null],[3,"Bounded","","A `SizeLimit` that restricts serialized or deserialized messages so that they do not exceed a certain byte length.",null,null],[12,"0","","",0,null],[3,"Infinite","","A `SizeLimit` without a limit.",null,null],[4,"CdrBe","","OMG CDR big-endian encapsulation.",null,null],[4,"CdrLe","","OMG CDR little-endian encapsulation.",null,null],[4,"PlCdrBe","","ParameterList encapsulated using OMG CDR big-endian encapsulation.",null,null],[4,"PlCdrLe","","ParameterList encapsulated using OMG CDR little-endian encapsulation.",null,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"Message","","",1,null],[13,"Io","","",1,null],[13,"DeserializeAnyNotSupported","","",1,null],[13,"InvalidBoolEncoding","","",1,null],[13,"InvalidChar","","",1,null],[13,"InvalidCharEncoding","","",1,null],[13,"InvalidEncapsulation","","",1,null],[13,"InvalidUtf8Encoding","","",1,null],[13,"NumberOutOfRange","","",1,null],[13,"SequenceMustHaveLength","","",1,null],[13,"SizeLimit","","",1,null],[13,"TypeNotSupported","","",1,null],[5,"calc_serialized_size","","Returns the size that an object would be if serialized with a encapsulation.",null,{"inputs":[{"name":"t"}],"output":{"name":"u64"}}],[5,"calc_serialized_size_bounded","","Given a maximum size limit, check how large an object would be if it were to be serialized with a encapsulation.",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":{"generics":["u64"],"name":"result"}}],[5,"serialize","","Serializes a serializable object into a `Vec` of bytes with the encapsulation.",null,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"generics":["vec"],"name":"result"}}],[5,"serialize_into","","Serializes an object directly into a `Write` with the encapsulation.",null,{"inputs":[{"name":"w"},{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[5,"deserialize","","Deserializes a slice of bytes into an object.",null,null],[5,"deserialize_from","","Deserializes an object directly from a `Read`.",null,{"inputs":[{"name":"r"},{"name":"s"}],"output":{"name":"result"}}],[0,"de","","Deserializing CDR into Rust data types.",null,null],[3,"Deserializer","cdr::de","A deserializer that reads bytes from a buffer.",null,null],[5,"deserialize_data","","Deserializes a slice of bytes into an object.",null,null],[5,"deserialize_data_from","","Deserializes an object directly from a `Read`.",null,{"inputs":[{"name":"r"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","",2,{"inputs":[{"name":"r"},{"name":"s"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"generics":["bigendian"],"name":"deserializer"}],"output":{"name":"self"}}],[11,"clone","cdr","",3,{"inputs":[{"name":"self"}],"output":{"name":"cdrbe"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"cdrbe"}],"output":{"name":"bool"}}],[11,"id","","",3,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"cdrle"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"cdrle"}],"output":{"name":"bool"}}],[11,"id","","",4,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"plcdrbe"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"plcdrbe"}],"output":{"name":"bool"}}],[11,"id","","",5,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"plcdrle"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,null],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"plcdrle"}],"output":{"name":"bool"}}],[11,"id","","",6,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kind_ref","","",7,{"inputs":[{"name":"self"}],"output":{"name":"errorkind"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["error"],"name":"option"}}],[11,"from","","",7,{"inputs":[{"generics":["errorkind"],"name":"context"}],"output":{"name":"error"}}],[11,"from","","",7,{"inputs":[{"name":"errorkind"}],"output":{"name":"error"}}],[11,"from","","",7,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"custom","","",7,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"custom","","",7,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"ser","","Serializing Rust data types into CDR.",null,null],[3,"Serializer","cdr::ser","A serializer that writes values into a buffer.",null,null],[5,"serialize_data","","Serializes a serializable object into a `Vec` of bytes.",null,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"generics":["vec"],"name":"result"}}],[5,"serialize_data_into","","Serializes an object directly into a `Write`.",null,{"inputs":[{"name":"w"},{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","",8,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[0,"size","cdr","Measuring the size of (de)serialized data.",null,null],[3,"Bounded","cdr::size","A `SizeLimit` that restricts serialized or deserialized messages so that they do not exceed a certain byte length.",null,null],[12,"0","","",0,null],[3,"Infinite","","A `SizeLimit` without a limit.",null,null],[5,"calc_serialized_data_size","","Returns the size that an object would be if serialized.",null,{"inputs":[{"name":"t"}],"output":{"name":"u64"}}],[5,"calc_serialized_data_size_bounded","","Given a maximum size limit, check how large an object would be if it were to be serialized.",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":{"generics":["u64"],"name":"result"}}],[8,"SizeLimit","","Limits on the number of bytes that can be read or written.",null,null],[10,"add","","",9,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"limit","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bounded"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"bounded"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"bounded"}],"output":{"name":"bool"}}],[11,"add","","",0,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"limit","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"infinite"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"infinite"}],"output":{"name":"bool"}}],[11,"add","","",10,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[11,"limit","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[6,"Result","cdr","Convenient wrapper around `std::Result`.",null,null],[8,"Encapsulation","","Data encapsulation scheme identifiers.",null,null],[16,"E","","",11,null],[10,"id","","",11,null],[11,"option","","",11,null],[8,"SizeLimit","","Limits on the number of bytes that can be read or written.",null,null],[10,"add","","",9,{"inputs":[{"name":"self"},{"name":"u64"}],"output":{"name":"result"}}],[10,"limit","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"hash","","",12,null],[11,"hash","","",13,null],[11,"read_u16","","",13,null],[11,"read_u32","","",13,null],[11,"read_u64","","",13,null],[11,"read_uint","","",13,null],[11,"write_u16","","",13,null],[11,"write_u32","","",13,null],[11,"write_u64","","",13,null],[11,"write_uint","","",13,null],[11,"read_u16_into","","",13,null],[11,"read_u32_into","","",13,null],[11,"read_u64_into","","",13,null],[11,"write_u16_into","","",13,null],[11,"write_u32_into","","",13,null],[11,"write_u64_into","","",13,null],[11,"from_slice_u16","","",13,null],[11,"from_slice_u32","","",13,null],[11,"from_slice_u64","","",13,null],[11,"from_slice_f32","","",13,null],[11,"from_slice_f64","","",13,null],[11,"read_u16","","",12,null],[11,"read_u32","","",12,null],[11,"read_u64","","",12,null],[11,"read_uint","","",12,null],[11,"write_u16","","",12,null],[11,"write_u32","","",12,null],[11,"write_u64","","",12,null],[11,"write_uint","","",12,null],[11,"read_u16_into","","",12,null],[11,"read_u32_into","","",12,null],[11,"read_u64_into","","",12,null],[11,"write_u16_into","","",12,null],[11,"write_u32_into","","",12,null],[11,"write_u64_into","","",12,null],[11,"from_slice_u16","","",12,null],[11,"from_slice_u32","","",12,null],[11,"from_slice_u64","","",12,null],[11,"from_slice_f32","","",12,null],[11,"from_slice_f64","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bigendian"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"littleendian"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"littleendian"}],"output":{"name":"ordering"}}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"bigendian"}],"output":{"name":"ordering"}}],[11,"default","","",12,{"inputs":[],"output":{"name":"littleendian"}}],[11,"default","","",13,{"inputs":[],"output":{"name":"bigendian"}}],[11,"option","","",11,null]],"paths":[[3,"Bounded"],[4,"ErrorKind"],[3,"Deserializer"],[4,"CdrBe"],[4,"CdrLe"],[4,"PlCdrBe"],[4,"PlCdrLe"],[3,"Error"],[3,"Serializer"],[8,"SizeLimit"],[3,"Infinite"],[8,"Encapsulation"],[4,"LittleEndian"],[4,"BigEndian"]]};
initSearch(searchIndex);
